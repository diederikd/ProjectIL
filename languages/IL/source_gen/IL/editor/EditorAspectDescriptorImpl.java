package IL.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new BusinessConcept_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Characteristic_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new PreferredTerm_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Relation_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Specification_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Statement_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new Synonym_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Word_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a2, editorComponentId)) {
          case 0:
            return Collections.<ConceptEditorComponent>singletonList(new InspectorBusinessConcept());
          case 1:
            return Collections.<ConceptEditorComponent>singletonList(new InspectorCharacteristic());
          case 2:
            return Collections.<ConceptEditorComponent>singletonList(new InspectorRelation());
          default:
        }
        break;
      default:
    }
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"IL.structure.BusinessConcept", "IL.structure.Characteristic", "IL.structure.PreferredTerm", "IL.structure.Relation", "IL.structure.Specification", "IL.structure.Statement", "IL.structure.Synonym", "IL.structure.Word"};
  private static String[] stringSwitchCases_xbvbvu_a0a0a0a2 = new String[]{"IL.editor.InspectorBusinessConcept", "IL.editor.InspectorCharacteristic", "IL.editor.InspectorRelation"};
  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"IL.structure.Synonym"};
}
